/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off part1 -c part1 --vector_source="D:/Study/HK221/HDL/Lab9/part1/Waveform2.vwf" --testbench_file="D:/Study/HK221/HDL/Lab9/part1/simulation/qsim/Waveform2.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off part1 -c part1 --vector_source="D:/Study/HK221/HDL/Lab9/part1/Waveform2.vwf" --testbench_file="D:/Study/HK221/HDL/Lab9/part1/simulation/qsim/Waveform2.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="D:/Study/HK221/HDL/Lab9/part1/simulation/qsim/" part1 -c part1</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="D:/Study/HK221/HDL/Lab9/part1/simulation/qsim/" part1 -c part1</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work part1.vo
vlog -work work Waveform2.vwf.vt
vsim -novopt -c -t 1ps -L cyclonev_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.pro_vlg_vec_tst
vcd file -direction part1.msim.vcd
vcd add -internal pro_vlg_vec_tst/*
vcd add -internal pro_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f















</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work part1.vo
vlog -work work Waveform2.vwf.vt
vsim -novopt -c -t 1ps -L cyclonev_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.pro_vlg_vec_tst
vcd file -direction part1.msim.vcd
vcd add -internal pro_vlg_vec_tst/*
vcd add -internal pro_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f















</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2022  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DONE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D_IN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D_IN[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("D_IN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "D_IN";
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RUN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("multi_select")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("multi_select[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("multi_select[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "multi_select";
}

SIGNAL("reg_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("reg_en[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("reg_en[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg_en";
}

SIGNAL("CODE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("CODE[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("CODE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "CODE";
}

SIGNAL("control:inst2|fsm_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("control:inst2|fsm_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "control:inst2|fsm_out";
}

SIGNAL("control:inst2|fsm_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "control:inst2|fsm_out";
}

SIGNAL("control:inst2|fsm_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "control:inst2|fsm_out";
}

SIGNAL("control:inst2|fsm_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("control:inst2|fsm_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "control:inst2|fsm_in";
}

SIGNAL("control:inst2|fsm_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "control:inst2|fsm_in";
}

SIGNAL("control:inst2|fsm_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "control:inst2|fsm_in";
}

SIGNAL("BUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BUS[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("BUS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "BUS";
}

SIGNAL("reg2_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("reg2_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg2_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg2_out";
}

SIGNAL("reg1_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("reg1_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg1_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg1_out";
}

SIGNAL("reg3_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("reg3_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("reg3_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "reg3_out";
}

SIGNAL("regA_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("regA_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regA_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regA_out";
}

SIGNAL("regG_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("regG_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("regG_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "regG_out";
}

SIGNAL("addsub_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("addsub_out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("addsub_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "addsub_out";
}

SIGNAL("MODE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("DONE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("D_IN[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("D_IN[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 850.0;
	}
}

TRANSITION_LIST("D_IN[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 890.0;
	}
}

TRANSITION_LIST("D_IN[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 970.0;
	}
}

TRANSITION_LIST("D_IN[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 890.0;
	}
}

TRANSITION_LIST("D_IN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 850.0;
	}
}

TRANSITION_LIST("D_IN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("D_IN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 850.0;
	}
}

TRANSITION_LIST("D_IN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 930.0;
	}
}

TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RUN")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("multi_select[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("multi_select[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg_en[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("CODE[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("control:inst2|fsm_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("control:inst2|fsm_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("control:inst2|fsm_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("control:inst2|fsm_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("control:inst2|fsm_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("control:inst2|fsm_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("BUS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg2_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg1_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("reg3_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regA_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("regG_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("addsub_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000.0;
	}
}

TRANSITION_LIST("MODE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RUN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "D_IN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DONE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "multi_select[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "reg_en[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "CODE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "CODE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "control:inst2|fsm_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "BUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "BUS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70, 71, 72, 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg1_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
	CHILDREN = 75, 76, 77, 78, 79, 80, 81, 82, 83;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg2_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 74;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 84;
	TREE_LEVEL = 0;
	CHILDREN = 85, 86, 87, 88, 89, 90, 91, 92, 93;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "reg3_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 84;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
	CHILDREN = 95, 96, 97, 98, 99, 100, 101, 102, 103;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regA_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
	CHILDREN = 105, 106, 107, 108, 109, 110, 111, 112, 113;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "regG_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 0;
	CHILDREN = 115, 116, 117, 118, 119, 120, 121, 122, 123;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "addsub_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 114;
}

DISPLAY_LINE
{
	CHANNEL = "MODE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
